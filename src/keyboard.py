"""Callback-–∫–Ω–æ–ø–∫–∏ –∏ –∏—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (JSON)"""
from typing import List
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton


def start():
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(InlineKeyboardButton('üìÖ–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data=str({
            'h': 'schedule1',
            'p': 'None'
        })),
               InlineKeyboardButton('‚úÖ–ü–æ–¥–ø–∏—Å–∫–∏', callback_data=str({
            'h': 'sub1',
            'p': 'None'
        })),
               InlineKeyboardButton('üè™–í–∏–∫—Ç–æ—Ä–∏—è', callback_data=str({
                   'h': 'vic1',
                   'p': 'None'
               })),
               InlineKeyboardButton('üîç–ü–æ–∏—Å–∫ –∞—É–¥–∏—Ç–æ—Ä–∏–∏', callback_data=str({
            'h': 'search',
            'p': 'None'
        })),
               InlineKeyboardButton('üë§–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏', callback_data=str({
            'h': 'prof1',
            'p': 'None'
        })),
               InlineKeyboardButton('üö™–ü–æ–ª–µ–∑–Ω—ã–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏', callback_data=str({
            'h': 'useful_list',
            'p': 'None'
        })))
    markup.add(InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
            'h': 'close',
            'p': 'None'
        })), row_width=1)
    return markup

def schedule1():
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(InlineKeyboardButton('‚Ü©–ù–∞–∑–∞–¥', callback_data=str({
            'h': 'previous',
            'p': 'start'
        })),
               InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
                   'h': 'close',
                   'p': 'start'
        })))
    return markup

def schedule2(g: str, unsub: bool = False):
    markup = InlineKeyboardMarkup(row_width=7)
    markup.add(InlineKeyboardButton('1Ô∏è‚É£', callback_data=str({'h': 'None'})),
               InlineKeyboardButton('–ü–Ω', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 1,
            'd': 0})),
               InlineKeyboardButton('–í—Ç', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 1,
            'd': 1})),
               InlineKeyboardButton('–°—Ä', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 1,
            'd': 2})),
               InlineKeyboardButton('–ß—Ç', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 1,
            'd': 3})),
               InlineKeyboardButton('–ü—Ç', callback_data=str({
            'h': 's3',
            'p': 'None',
            'w': 1,
            'd': 4})),
               InlineKeyboardButton('–°–±', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 1,
            'd': 5})))
    markup.add(InlineKeyboardButton('2Ô∏è‚É£', callback_data=str({'h': 'None'})),
               InlineKeyboardButton('–ü–Ω', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 0,
            'd': 0 })),
               InlineKeyboardButton('–í—Ç', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 0,
            'd': 1})),
               InlineKeyboardButton('–°—Ä', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 0,
            'd': 2})),
               InlineKeyboardButton('–ß—Ç', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 0,
            'd': 3})),
               InlineKeyboardButton('–ü—Ç', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 0,
            'd': 4})),
               InlineKeyboardButton('–°–±', callback_data=str({
            'h': 's3',
            'g': g,
            'w': 0,
            'd': 5})))
    if not unsub:
        markup.add(InlineKeyboardButton('–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≥—Ä—É–ø–ø—É', callback_data=str({
            'h': 'sub_in_sch',
            'p': 'None',
            'g': g
        })), row_width=1)
    else:
        markup.add(InlineKeyboardButton('–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –≥—Ä—É–ø–ø—ã', callback_data=str({
            'h': 'unsub_in_sch',
            'p': 'None',
            'g': g
        })), row_width=1)
    markup.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data=str({
            'h': 'previous',
            'p': 'start'
        })),
               InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
            'h': 'close',
            'p': 'None'
        })), row_width=1)
    return markup

def sub1(groups: List):
    markup = InlineKeyboardMarkup(row_width=1)
    for group in groups:
        markup.add(InlineKeyboardButton(group, callback_data=str({
            'h': 'sub2',
            'p': 'start',
            'g': group
        })))
    
    markup.add(InlineKeyboardButton('‚Ü©–ù–∞–∑–∞–¥', callback_data=str({
            'h': 'previous',
            'p': 'start'
        })),
               InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
                   'h': 'close',
                   'p': 'None'
        })))
    return markup

def sub1_basic():
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(InlineKeyboardButton('‚Ü©–ù–∞–∑–∞–¥', callback_data=str({
            'h': 'previous',
            'p': 'start'
        })),
               InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
                   'h': 'close',
                   'p': 'start'
        })))
    return markup

def vic1():
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(InlineKeyboardButton('üçº–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏', callback_data=str({
        'h': 'vic2',
        'p': 'None',
        'c': 'energy'
    })),
               InlineKeyboardButton('üçû–ë—É–ª–æ—á–∫–∏', callback_data=str({
        'h': 'vic2',
        'p': 'None',
        'c': 'bread'
    })),
               InlineKeyboardButton('üç´–°–Ω–µ–∫–∏', callback_data=str({
        'h': 'vic2',
        'p': 'None',
        'c': 'snack'
    })),
               InlineKeyboardButton('ü•§–ß–∞–π, –≥–∞–∑–∏—Ä–æ–≤–∫–∞, —Å–æ–∫, –≤–æ–¥–∞', callback_data=str({
        'h': 'vic2',
        'p': 'None',
        'c': 'drink'
    })),
               InlineKeyboardButton('‚Ü©–ù–∞–∑–∞–¥', callback_data=str({
        'h': 'previous',
        'p': 'start'
    })),
               InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
        'h': 'close',
        'p': 'start'
    })))
    return markup

def prof1():
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(InlineKeyboardButton('üìñ–ü–æ—á–∏—Ç–∞—Ç—å', callback_data=str({
        'h': 'prof2',
        'p': 'None',
        'ch': 'read'
    })),
               InlineKeyboardButton('üñä–ù–∞–ø–∏—Å–∞—Ç—å', callback_data=str({
        'h': 'prof2',
        'p': 'None',
        'ch': 'write'
    })))
    markup.add(InlineKeyboardButton('‚Ü©–ù–∞–∑–∞–¥', callback_data=str({
        'h': 'previous',
        'p': 'start'
    })),
               InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
        'h': 'close',
        'p': 'start'
    })), row_width=1)
    return markup

def prof_list(professors: List[str]):
    markup = InlineKeyboardMarkup(row_width=1)
    for prof in professors:
        markup.add(InlineKeyboardButton(prof, callback_data=str({
            'h': 'prof_desc',
            'prof': prof
        })))
    markup.add(InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
            'h': 'close',
            'p': 'start'
        })))
    return markup

def basic():
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data=str({
            'h': 'previous',
            'p': 'start'
        })),
               InlineKeyboardButton('‚ùå–ó–∞–∫—Ä—ã—Ç—å', callback_data=str({
                   'h': 'close',
                   'p': 'start'
        })))
